@model Prestamo
@{
    ViewData["Title"] = "Crear Préstamo";
    Layout = "~/Views/Shared/Dashboardpack/_Layout.cshtml";
    ViewData["PageTitle"] = Model.Id == 0 ? "Crear Préstamo" : "Editar Préstamo";
}

<style>
    .custom-combobox {
        position: relative;
        display: inline-block;
    }

    .custom-combobox-toggle {
        position: absolute;
        top: 0;
        bottom: 0;
        margin-left: -1px;
        padding: 0;
    }

    .custom-combobox-input {
        margin: 0;
        padding: 5px 10px;
    }
</style>

<script>
    $(function () {
        $.widget("custom.combobox", {
            _create: function () {
                this.wrapper = $("<span>")
                    .addClass("custom-combobox")
                    .insertAfter(this.element);

                this.element.hide();
                this._createAutocomplete();
                this._createShowAllButton();
            },

            _createAutocomplete: function () {
                var selected = this.element.children(":selected"),
                    value = selected.val() ? selected.text() : "";

                this.input = $("<input>")
                    .appendTo(this.wrapper)
                    .val(value)
                    .attr("title", "")
                    .addClass("custom-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left")
                    .autocomplete({
                        delay: 0,
                        minLength: 0,
                        source: this._source.bind(this)
                    })
                    .tooltip({
                        classes: {
                            "ui-tooltip": "ui-state-highlight"
                        }
                    });

                this._on(this.input, {
                    autocompleteselect: function (event, ui) {
                        ui.item.option.selected = true;
                        this._trigger("select", event, {
                            item: ui.item.option
                        });
                    },

                    autocompletechange: "_removeIfInvalid"
                });
            },

            _createShowAllButton: function () {
                var input = this.input,
                    wasOpen = false;

                $("<a>")
                    .attr("tabIndex", -1)
                    .attr("title", "Show All Items")
                    .tooltip()
                    .appendTo(this.wrapper)
                    .button({
                        icons: {
                            primary: "ui-icon-triangle-1-s"
                        },
                        text: false
                    })
                    .removeClass("ui-corner-all")
                    .addClass("custom-combobox-toggle ui-corner-right")
                    .on("mousedown", function () {
                        wasOpen = input.autocomplete("widget").is(":visible");
                    })
                    .on("click", function () {
                        input.trigger("focus");

                        // Close if already visible
                        if (wasOpen) {
                            return;
                        }

                        // Pass empty string as value to search for, displaying all results
                        input.autocomplete("search", "");
                    });
            },

            _source: function (request, response) {
                var matcher = new RegExp($.ui.autocomplete.escapeRegex(request.term), "i");
                response(this.element.children("option").map(function () {
                    var text = $(this).text();
                    if (this.value && (!request.term || matcher.test(text)))
                        return {
                            label: text,
                            value: text,
                            option: this
                        };
                }));
            },

            _removeIfInvalid: function (event, ui) {

                // Selected an item, nothing to do
                if (ui.item) {
                    return;
                }

                // Search for a match (case-insensitive)
                var value = this.input.val(),
                    valueLowerCase = value.toLowerCase(),
                    valid = false;
                this.element.children("option").each(function () {
                    if ($(this).text().toLowerCase() === valueLowerCase) {
                        this.selected = valid = true;
                        return false;
                    }
                });

                // Found a match, nothing to do
                if (valid) {
                    return;
                }

                // Remove invalid value
                this.input
                    .val("")
                    .attr("title", value + " didn't match any item")
                    .tooltip("open");
                this.element.val("");
                this._delay(function () {
                    this.input.tooltip("close").attr("title", "");
                }, 2500);
                this.input.autocomplete("instance").term = "";
            },

            _destroy: function () {
                this.wrapper.remove();
                this.element.show();
            }
        });

        $("#combobox").combobox();
        $("#toggle").on("click", function () {
            $("#combobox").toggle();
        });
    });
</script>

<div class="app-main__inner">

    <div class="app-page-title">
        <div class="page-title-wrapper">
            <div class="page-title-heading">
                <div class="page-title-icon">
                    <i class="pe-7s-ticket icon-gradient bg-mean-fruit"> </i>
                </div>
                <div>
                    Libros
                    <div class="page-title-subheading">
                        @* This is an example dashboard created using build-in
                        elements and components. *@
                    </div>
                </div>
            </div>
        </div>
    </div><!-- Default box -->

    @if (TempData["mensaje"] != null)
    {
        <div class="alert alert-warning alert-dismissible fade show" role="alert">
            <strong>Info:</strong> @TempData["mensaje"]
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }


    <div class="card">
        <div class="card-body row">
            <div class="col-5 text-center d-flex align-items-center justify-content-center">
                <div class="">
                    @* <h2>Admin<strong>LTE</strong></h2> *@
                    @if (Model.Id == 0)
                    {
                        <h3><i class="fa fa-plus"></i> Registrar Préstamo </h3>
                    }
                    else
                    {
                        <h3><i class="pe-7s-note btn-icon-wrapper"></i> Editar Préstamo </h3>
                    }
                    <h2>Biblioteca Municipal</h2>
                    <p class="lead mb-5">
                        123 Testing Ave, Testtown, 9876 NA<br>
                        Phone: +1 234 56789012
                    </p>
                </div>
            </div>
            <div class="col-7">
                <form method="post" asp-action="Crear">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
 
                    <div class="form-group">
                        <input type="hidden" name="Id" value="@Model.Id" />
                        <label asp-for="LibroId">Libro</label>
                        <select asp-for="LibroId" name="LibroId" class="form-control" asp-items="@ViewBag.Libros">
                            <option selected>---Seleccione Libro---</option>
                        </select>
                        <span asp-validation-for="LibroId" class="text-danger fs-6"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="LectorId">Lector</label>
                        <select asp-for="LectorId" name="LectorId" class="form-control" asp-items="@ViewBag.Lectores">
                            <option selected>---Seleccione Lector---</option>
                        </select>
                        <span asp-validation-for="LectorId" class="text-danger fs-6"></span>
                    </div>
                    <div class="form-group">
                        <input type="submit" class="btn btn-primary" value="Salvar">
                        <input class="btn btn-danger" value="Cancelar" onclick="history.go(-1); return false;">
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>