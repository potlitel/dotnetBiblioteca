// <auto-generated />
using System;
using BootstrapDashboard.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BootstrapDashboard.Migrations
{
    [DbContext(typeof(BibliotecaContext))]
    [Migration("20230726020545_MigracionRectificandoModeloLibros1")]
    partial class MigracionRectificandoModeloLibros1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BootstrapDashboard.Models.Genero", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GeneroId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("generos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f82b3f51-abed-4342-b225-5db95c2d2c3a"),
                            CreatedAt = new DateTime(2023, 7, 26, 2, 5, 45, 612, DateTimeKind.Utc).AddTicks(9598),
                            Nombre = "Novela Policiaca",
                            UpdatedAt = new DateTime(2023, 7, 26, 2, 5, 45, 612, DateTimeKind.Utc).AddTicks(9601)
                        },
                        new
                        {
                            Id = new Guid("6ddf7352-d6d2-47a4-af93-4791db7a18e1"),
                            CreatedAt = new DateTime(2023, 7, 26, 2, 5, 45, 612, DateTimeKind.Utc).AddTicks(9603),
                            Nombre = "Romántico",
                            UpdatedAt = new DateTime(2023, 7, 26, 2, 5, 45, 612, DateTimeKind.Utc).AddTicks(9604)
                        },
                        new
                        {
                            Id = new Guid("33d26902-e574-4db6-931a-83f69cb5c81d"),
                            CreatedAt = new DateTime(2023, 7, 26, 2, 5, 45, 612, DateTimeKind.Utc).AddTicks(9605),
                            Nombre = "Erótico",
                            UpdatedAt = new DateTime(2023, 7, 26, 2, 5, 45, 612, DateTimeKind.Utc).AddTicks(9606)
                        },
                        new
                        {
                            Id = new Guid("b4970da9-1487-449b-a716-4b0a5c136814"),
                            CreatedAt = new DateTime(2023, 7, 26, 2, 5, 45, 612, DateTimeKind.Utc).AddTicks(9607),
                            Nombre = "Ficción",
                            UpdatedAt = new DateTime(2023, 7, 26, 2, 5, 45, 612, DateTimeKind.Utc).AddTicks(9607)
                        },
                        new
                        {
                            Id = new Guid("9373e19d-2f9e-42ef-a0f8-65a027af56ec"),
                            CreatedAt = new DateTime(2023, 7, 26, 2, 5, 45, 612, DateTimeKind.Utc).AddTicks(9609),
                            Nombre = "Biografía",
                            UpdatedAt = new DateTime(2023, 7, 26, 2, 5, 45, 612, DateTimeKind.Utc).AddTicks(9609)
                        },
                        new
                        {
                            Id = new Guid("65d8f621-2b88-4a3b-ae8f-0a5e60eb7be3"),
                            CreatedAt = new DateTime(2023, 7, 26, 2, 5, 45, 612, DateTimeKind.Utc).AddTicks(9611),
                            Nombre = "Ensayo",
                            UpdatedAt = new DateTime(2023, 7, 26, 2, 5, 45, 612, DateTimeKind.Utc).AddTicks(9611)
                        },
                        new
                        {
                            Id = new Guid("a43c1937-244d-431f-afc8-c7f760bc6f63"),
                            CreatedAt = new DateTime(2023, 7, 26, 2, 5, 45, 612, DateTimeKind.Utc).AddTicks(9624),
                            Nombre = "Poesía",
                            UpdatedAt = new DateTime(2023, 7, 26, 2, 5, 45, 612, DateTimeKind.Utc).AddTicks(9625)
                        });
                });

            modelBuilder.Entity("BootstrapDashboard.Models.Libro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LibroId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<Guid>("GeneroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("GeneroId");

                    b.ToTable("libros");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b03565f8-a06f-4ea4-8fda-24eba7ac4ed4"),
                            CreatedAt = new DateTime(2023, 7, 26, 2, 5, 45, 612, DateTimeKind.Utc).AddTicks(9790),
                            Estado = false,
                            GeneroId = new Guid("f82b3f51-abed-4342-b225-5db95c2d2c3a"),
                            ISBN = "978-84-8136-542-9",
                            Nombre = "Una pica en Flandes",
                            UpdatedAt = new DateTime(2023, 7, 26, 2, 5, 45, 612, DateTimeKind.Utc).AddTicks(9790)
                        });
                });

            modelBuilder.Entity("BootstrapDashboard.Models.Libro", b =>
                {
                    b.HasOne("BootstrapDashboard.Models.Genero", "Genero")
                        .WithMany()
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genero");
                });
#pragma warning restore 612, 618
        }
    }
}
