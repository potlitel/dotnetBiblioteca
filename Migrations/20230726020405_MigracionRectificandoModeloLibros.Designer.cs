// <auto-generated />
using System;
using BootstrapDashboard.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BootstrapDashboard.Migrations
{
    [DbContext(typeof(BibliotecaContext))]
    [Migration("20230726020405_MigracionRectificandoModeloLibros")]
    partial class MigracionRectificandoModeloLibros
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BootstrapDashboard.Models.Genero", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GeneroId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("generos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("31a19d9f-95df-4867-bffd-a407d4de6d24"),
                            CreatedAt = new DateTime(2023, 7, 26, 2, 4, 5, 460, DateTimeKind.Utc).AddTicks(301),
                            Nombre = "Novela Policiaca",
                            UpdatedAt = new DateTime(2023, 7, 26, 2, 4, 5, 460, DateTimeKind.Utc).AddTicks(306)
                        },
                        new
                        {
                            Id = new Guid("ff5aa825-51f0-4012-b94a-d611094a5d4e"),
                            CreatedAt = new DateTime(2023, 7, 26, 2, 4, 5, 460, DateTimeKind.Utc).AddTicks(310),
                            Nombre = "Romántico",
                            UpdatedAt = new DateTime(2023, 7, 26, 2, 4, 5, 460, DateTimeKind.Utc).AddTicks(310)
                        },
                        new
                        {
                            Id = new Guid("535689b7-f0e1-479b-b791-524a208b83f9"),
                            CreatedAt = new DateTime(2023, 7, 26, 2, 4, 5, 460, DateTimeKind.Utc).AddTicks(312),
                            Nombre = "Erótico",
                            UpdatedAt = new DateTime(2023, 7, 26, 2, 4, 5, 460, DateTimeKind.Utc).AddTicks(312)
                        },
                        new
                        {
                            Id = new Guid("e0158c04-54ab-4859-a3c6-30c7a5327072"),
                            CreatedAt = new DateTime(2023, 7, 26, 2, 4, 5, 460, DateTimeKind.Utc).AddTicks(314),
                            Nombre = "Ficción",
                            UpdatedAt = new DateTime(2023, 7, 26, 2, 4, 5, 460, DateTimeKind.Utc).AddTicks(314)
                        },
                        new
                        {
                            Id = new Guid("4cebb78c-b069-4f7c-89bf-a2a877e1740e"),
                            CreatedAt = new DateTime(2023, 7, 26, 2, 4, 5, 460, DateTimeKind.Utc).AddTicks(316),
                            Nombre = "Biografía",
                            UpdatedAt = new DateTime(2023, 7, 26, 2, 4, 5, 460, DateTimeKind.Utc).AddTicks(316)
                        },
                        new
                        {
                            Id = new Guid("c59c8008-558e-4d8c-a87b-fa18e38f7905"),
                            CreatedAt = new DateTime(2023, 7, 26, 2, 4, 5, 460, DateTimeKind.Utc).AddTicks(317),
                            Nombre = "Ensayo",
                            UpdatedAt = new DateTime(2023, 7, 26, 2, 4, 5, 460, DateTimeKind.Utc).AddTicks(318)
                        },
                        new
                        {
                            Id = new Guid("23443987-d932-4a5e-b473-1bc7f87f03b6"),
                            CreatedAt = new DateTime(2023, 7, 26, 2, 4, 5, 460, DateTimeKind.Utc).AddTicks(332),
                            Nombre = "Poesía",
                            UpdatedAt = new DateTime(2023, 7, 26, 2, 4, 5, 460, DateTimeKind.Utc).AddTicks(332)
                        });
                });

            modelBuilder.Entity("BootstrapDashboard.Models.Libro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LibroId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<Guid>("GeneroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("GeneroId");

                    b.ToTable("libros");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2b84d503-02b1-40d1-8eb2-b81ee79402f8"),
                            CreatedAt = new DateTime(2023, 7, 26, 2, 4, 5, 460, DateTimeKind.Utc).AddTicks(582),
                            Estado = false,
                            GeneroId = new Guid("31a19d9f-95df-4867-bffd-a407d4de6d24"),
                            ISBN = "978-84-8136-542-9",
                            Nombre = "Una pica en Flandes",
                            UpdatedAt = new DateTime(2023, 7, 26, 2, 4, 5, 460, DateTimeKind.Utc).AddTicks(583)
                        });
                });

            modelBuilder.Entity("BootstrapDashboard.Models.Libro", b =>
                {
                    b.HasOne("BootstrapDashboard.Models.Genero", "Genero")
                        .WithMany()
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genero");
                });
#pragma warning restore 612, 618
        }
    }
}
