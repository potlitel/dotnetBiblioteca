// <auto-generated />
using System;
using BootstrapDashboard.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BootstrapDashboard.Migrations
{
    [DbContext(typeof(BibliotecaContext))]
    [Migration("20230726021829_MigracionRectificandoModeloLibros2")]
    partial class MigracionRectificandoModeloLibros2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BootstrapDashboard.Models.Genero", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GeneroId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("generos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1e62aecd-5580-4b98-a9c4-0c95f3a0b4bc"),
                            CreatedAt = new DateTime(2023, 7, 26, 2, 18, 28, 923, DateTimeKind.Utc).AddTicks(2598),
                            Nombre = "Novela Policiaca",
                            UpdatedAt = new DateTime(2023, 7, 26, 2, 18, 28, 923, DateTimeKind.Utc).AddTicks(2602)
                        },
                        new
                        {
                            Id = new Guid("903870cc-b2a9-4209-91cd-3db5c7e75524"),
                            CreatedAt = new DateTime(2023, 7, 26, 2, 18, 28, 923, DateTimeKind.Utc).AddTicks(2615),
                            Nombre = "Romántico",
                            UpdatedAt = new DateTime(2023, 7, 26, 2, 18, 28, 923, DateTimeKind.Utc).AddTicks(2615)
                        },
                        new
                        {
                            Id = new Guid("edf1e5e2-013f-4865-a558-b39cde8d9c4b"),
                            CreatedAt = new DateTime(2023, 7, 26, 2, 18, 28, 923, DateTimeKind.Utc).AddTicks(2617),
                            Nombre = "Erótico",
                            UpdatedAt = new DateTime(2023, 7, 26, 2, 18, 28, 923, DateTimeKind.Utc).AddTicks(2617)
                        },
                        new
                        {
                            Id = new Guid("9eefa308-1d93-4d05-a667-cfd235cbe567"),
                            CreatedAt = new DateTime(2023, 7, 26, 2, 18, 28, 923, DateTimeKind.Utc).AddTicks(2619),
                            Nombre = "Ficción",
                            UpdatedAt = new DateTime(2023, 7, 26, 2, 18, 28, 923, DateTimeKind.Utc).AddTicks(2619)
                        },
                        new
                        {
                            Id = new Guid("e5b5ccd8-750d-4629-82a5-28d634ff9049"),
                            CreatedAt = new DateTime(2023, 7, 26, 2, 18, 28, 923, DateTimeKind.Utc).AddTicks(2621),
                            Nombre = "Biografía",
                            UpdatedAt = new DateTime(2023, 7, 26, 2, 18, 28, 923, DateTimeKind.Utc).AddTicks(2621)
                        },
                        new
                        {
                            Id = new Guid("d560e178-fa55-4384-8436-a927d8ef1a70"),
                            CreatedAt = new DateTime(2023, 7, 26, 2, 18, 28, 923, DateTimeKind.Utc).AddTicks(2622),
                            Nombre = "Ensayo",
                            UpdatedAt = new DateTime(2023, 7, 26, 2, 18, 28, 923, DateTimeKind.Utc).AddTicks(2623)
                        },
                        new
                        {
                            Id = new Guid("64bd2418-5895-4dba-bf45-66913e8a1b55"),
                            CreatedAt = new DateTime(2023, 7, 26, 2, 18, 28, 923, DateTimeKind.Utc).AddTicks(2624),
                            Nombre = "Poesía",
                            UpdatedAt = new DateTime(2023, 7, 26, 2, 18, 28, 923, DateTimeKind.Utc).AddTicks(2625)
                        });
                });

            modelBuilder.Entity("BootstrapDashboard.Models.Libro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LibroId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<Guid>("GeneroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("GeneroId");

                    b.ToTable("libros");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3740aa8b-7d79-4605-b5f3-7781b18489cf"),
                            CreatedAt = new DateTime(2023, 7, 26, 2, 18, 28, 923, DateTimeKind.Utc).AddTicks(2848),
                            Estado = false,
                            GeneroId = new Guid("1e62aecd-5580-4b98-a9c4-0c95f3a0b4bc"),
                            ISBN = "978-84-8136-542-9",
                            Nombre = "Una pica en Flandes",
                            UpdatedAt = new DateTime(2023, 7, 26, 2, 18, 28, 923, DateTimeKind.Utc).AddTicks(2849)
                        });
                });

            modelBuilder.Entity("BootstrapDashboard.Models.Libro", b =>
                {
                    b.HasOne("BootstrapDashboard.Models.Genero", "Genero")
                        .WithMany()
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genero");
                });
#pragma warning restore 612, 618
        }
    }
}
